"""Try to update server defaults

Revision ID: df7900440457
Revises: a89d32e095c0
Create Date: 2025-05-26 21:31:50.561468+00:00

"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "df7900440457"
down_revision = "a89d32e095c0"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "itinerary_items",
        "itinerary_item_id",
        existing_type=sa.UUID(),
        server_default=sa.text("gen_random_uuid()"),
        existing_nullable=False,
    )
    op.alter_column(
        "itinerary_items",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        existing_nullable=False,
    )
    op.alter_column(
        "itinerary_items",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        existing_nullable=False,
    )
    op.alter_column(
        "itinerary_participants",
        "status",
        existing_type=postgresql.ENUM(
            "UNKNOWN", "INVITED", "JOINED", "DECLINED", "LEFT", name="participantstatus"
        ),
        server_default=sa.text("'UNKNOWN'"),
        existing_nullable=False,
    )
    op.alter_column(
        "itinerary_participants",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        existing_nullable=False,
    )
    op.alter_column(
        "itinerary_participants",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        existing_nullable=False,
    )
    op.alter_column(
        "trip_participants",
        "status",
        existing_type=postgresql.ENUM(
            "UNKNOWN", "INVITED", "JOINED", "DECLINED", "LEFT", name="participantstatus"
        ),
        server_default=sa.text("'UNKNOWN'"),
        existing_nullable=False,
    )
    op.alter_column(
        "trip_participants",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        existing_nullable=False,
    )
    op.alter_column(
        "trip_participants",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        existing_nullable=False,
    )
    op.alter_column(
        "trip_segments",
        "trip_segment_id",
        existing_type=sa.UUID(),
        server_default=sa.text("gen_random_uuid()"),
        existing_nullable=False,
    )
    op.alter_column(
        "trip_segments",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        existing_nullable=False,
    )
    op.alter_column(
        "trip_segments",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        existing_nullable=False,
    )
    op.alter_column(
        "trips",
        "trip_id",
        existing_type=sa.UUID(),
        server_default=sa.text("gen_random_uuid()"),
        existing_nullable=False,
    )
    op.alter_column(
        "trips",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        existing_nullable=False,
    )
    op.alter_column(
        "trips",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        existing_nullable=False,
    )
    op.alter_column(
        "users",
        "user_id",
        existing_type=sa.UUID(),
        server_default=sa.text("gen_random_uuid()"),
        existing_nullable=False,
    )
    op.alter_column(
        "users",
        "status",
        existing_type=postgresql.ENUM(
            "UNKNOWN", "UNVERIFIED", "ACTIVE", "DEACTIVATED", name="userstatus"
        ),
        server_default=sa.text("'UNVERIFIED'"),
        existing_nullable=False,
    )
    op.alter_column(
        "users",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        existing_nullable=False,
    )
    op.alter_column(
        "users",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=sa.text("now()"),
        existing_nullable=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "users",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        existing_nullable=False,
    )
    op.alter_column(
        "users",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        existing_nullable=False,
    )
    op.alter_column(
        "users",
        "status",
        existing_type=postgresql.ENUM(
            "UNKNOWN", "UNVERIFIED", "ACTIVE", "DEACTIVATED", name="userstatus"
        ),
        server_default=None,
        existing_nullable=False,
    )
    op.alter_column(
        "users",
        "user_id",
        existing_type=sa.UUID(),
        server_default=None,
        existing_nullable=False,
    )
    op.alter_column(
        "trips",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        existing_nullable=False,
    )
    op.alter_column(
        "trips",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        existing_nullable=False,
    )
    op.alter_column(
        "trips",
        "trip_id",
        existing_type=sa.UUID(),
        server_default=None,
        existing_nullable=False,
    )
    op.alter_column(
        "trip_segments",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        existing_nullable=False,
    )
    op.alter_column(
        "trip_segments",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        existing_nullable=False,
    )
    op.alter_column(
        "trip_segments",
        "trip_segment_id",
        existing_type=sa.UUID(),
        server_default=None,
        existing_nullable=False,
    )
    op.alter_column(
        "trip_participants",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        existing_nullable=False,
    )
    op.alter_column(
        "trip_participants",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        existing_nullable=False,
    )
    op.alter_column(
        "trip_participants",
        "status",
        existing_type=postgresql.ENUM(
            "UNKNOWN", "INVITED", "JOINED", "DECLINED", "LEFT", name="participantstatus"
        ),
        server_default=None,
        existing_nullable=False,
    )
    op.alter_column(
        "itinerary_participants",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        existing_nullable=False,
    )
    op.alter_column(
        "itinerary_participants",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        existing_nullable=False,
    )
    op.alter_column(
        "itinerary_participants",
        "status",
        existing_type=postgresql.ENUM(
            "UNKNOWN", "INVITED", "JOINED", "DECLINED", "LEFT", name="participantstatus"
        ),
        server_default=None,
        existing_nullable=False,
    )
    op.alter_column(
        "itinerary_items",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        existing_nullable=False,
    )
    op.alter_column(
        "itinerary_items",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        server_default=None,
        existing_nullable=False,
    )
    op.alter_column(
        "itinerary_items",
        "itinerary_item_id",
        existing_type=sa.UUID(),
        server_default=None,
        existing_nullable=False,
    )
    # ### end Alembic commands ###
