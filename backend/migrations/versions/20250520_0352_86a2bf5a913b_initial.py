"""Initial

Revision ID: 86a2bf5a913b
Revises: 
Create Date: 2025-05-20 03:52:22.844008+00:00

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '86a2bf5a913b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password_hash', sa.String(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=False),
    sa.Column('oauth_provider', sa.String(), nullable=True),
    sa.Column('oauth_provider_user_id', sa.String(), nullable=True),
    sa.Column('status', sa.Enum('UNKNOWN', 'UNVERIFIED', 'ACTIVE', 'DEACTIVATED', name='userstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('trips',
    sa.Column('trip_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('created_by_user_id', sa.UUID(), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('trip_id')
    )
    op.create_table('itinerary_items',
    sa.Column('itinerary_item_id', sa.UUID(), nullable=False),
    sa.Column('trip_id', sa.UUID(), nullable=True),
    sa.Column('created_by_user_id', sa.UUID(), nullable=False),
    sa.Column('type', sa.Enum('UNKNOWN', 'FLIGHT', 'GROUND_TRANSPORTATION', 'CAR_RENTAL', 'ACCOMMODATION', 'ACTIVITY', name='itineraryitemtype'), nullable=False),
    sa.Column('itinerary_datetime', sa.DateTime(), nullable=True),
    sa.Column('booking_reference', sa.String(), nullable=True),
    sa.Column('booking_url', sa.String(), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.Column('raw_details_json', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['trip_id'], ['trips.trip_id'], ),
    sa.PrimaryKeyConstraint('itinerary_item_id')
    )
    op.create_table('trip_participants',
    sa.Column('trip_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('status', sa.Enum('UNKNOWN', 'INVITED', 'JOINED', 'DECLINED', 'LEFT', name='tripparticipantstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['trip_id'], ['trips.trip_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('trip_id', 'user_id')
    )
    op.create_table('trip_segments',
    sa.Column('trip_segment_id', sa.UUID(), nullable=False),
    sa.Column('trip_id', sa.UUID(), nullable=False),
    sa.Column('location_name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['trip_id'], ['trips.trip_id'], ),
    sa.PrimaryKeyConstraint('trip_segment_id')
    )
    op.create_table('itinerary_participants',
    sa.Column('itinerary_item_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('status', sa.Enum('UNKNOWN', 'INVITED', 'JOINED', 'DECLINED', 'LEFT', name='itineraryparticipantstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['itinerary_item_id'], ['itinerary_items.itinerary_item_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('itinerary_item_id', 'user_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('itinerary_participants')
    op.drop_table('trip_segments')
    op.drop_table('trip_participants')
    op.drop_table('itinerary_items')
    op.drop_table('trips')
    op.drop_table('users')
    # ### end Alembic commands ###